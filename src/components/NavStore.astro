---
import NavSub from "./NavSub.astro";

const { data } = Astro.props;

const subcategories = await fetch(
  "https://thryhwcrvlzlnuucxhqk.supabase.co/rest/v1/subcategories",
  {
    method: "GET",
    headers: {
      apikey:
        "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRocnlod2Nydmx6bG51dWN4aHFrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYyMTIxNzUsImV4cCI6MjAzMTc4ODE3NX0.qe83qKHMa9-0Tc3HFWEqgvYa_LKMiI267dutJ7DxWs0",
    },
  }
).then((res) => res.json());
---

<ul class="dropdown">
  <li class="category-container">
    <div class="category">
      <p>{data.category}</p>
    </div>
    <ul class="subcategories">
      {
        subcategories
          .filter((sub) => sub.category_id === data.id)
          .map((sub) => (
            <li class="subcategory">
              <NavSub data={sub} />
            </li>
          ))
      }
    </ul>
  </li>
</ul>

<style>
  ul,
  li .category {
    list-style: none;
    position: relative;
    max-width: 160px;
    width: 100%;
  }

  .category {
    background-color: var(--accent-color);
    color: var(--primary-color);
    height: 40px;

    display: grid;
    align-items: center;
    gap: 2em;
    cursor: pointer;
  }

  .category:hover {
    background-color: var(--hover-color);
    outline: 1px solid black;
  }

  .category:active {
    background-color: var(--secondary-accent);
  }

  p {
    text-align: center;
    color: var(--primary-color);
  }

  ul li:hover > ul {
    display: inherit;
  }

  @media (max-width: 860px) {
    ul,
    li .category {
      max-width: 100%;
      outline: 1px solid var(--primary-color);
    }

    .category {
      height: 4rem;
      
    }

    .subcategories {
      width: 100%;
    }
    .subcategory {
      width: 100%;
      z-index: 1;
      margin: 0 auto;
      padding: 0;
      outline: 1px solid black;
      position: relative;
    }

    ul ul {
      position: absolute;
      display: none;
    }

    ul li.show > ul {
      display: block;
    }

    .subcategories {
      display: none;
    }

    .subcategories.show,
    .subcategories.active {
      display: block;
    }
    .category:hover {
      background-color: var(--secondary-accent);
      outline: 1px solid black;
    }
    .category.show {
      background-color: var(--hover-color);
    }

    .subcategories {
      text-align: center;
    }
  }
  /******** STYLING SUBCATEGORIES *********/

  .subcategories {
    width: 100%;
  }
  .subcategory {
    width: 100%;
    z-index: 1;
    margin: 0 auto;
    padding: 0;
    outline: 1px solid black;
    position: relative;
  }

  ul ul {
    position: absolute;
    display: none;
  }

  ul li.show > ul {
    display: block;
  }

  .subcategories {
    display: none;
  }

  .subcategories.show,
  .subcategories.active {
    display: block;
  }
  /* mobile dynamic  */
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const categoryContainers = document.querySelectorAll(".category-container");

    categoryContainers.forEach((container) => {
      const category = container.querySelector(".category");
      const subcategoryList = container.querySelector(".subcategories");

      category.addEventListener("click", () => {
        subcategoryList.classList.toggle("show");
      });
    });
  });
</script>

<!-- document.addEventListener("DOMContentLoaded", () => {
  const tilføjKnap = document.querySelector(".Tilføj");
  const tilføjetKnap = document.querySelector(".tilføjet");

  tilføjKnap.addEventListener("click", () => {
    tilføjKnap.style.display = "none";
    tilføjetKnap.style.display = "block";
    tilføjetKnap.classList.add("rød");
  });

  tilføjetKnap.addEventListener("click", () => {
    tilføjetKnap.style.display = "none";
    tilføjKnap.style.display = "block";
  });
}); -->
<!-- 
/* ul li:hover > ul {
  display: inherit;
} */ -->
