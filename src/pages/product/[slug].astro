---
import "../../styles/styles.css";
import ProductDescription from "../../components/ProductDescription.astro";
import Footer from "../../components/Footer.astro";
import Carousel from "../../components/Carousel.astro";

export async function getStaticPaths() {
  const data = await fetch(
    "https://thryhwcrvlzlnuucxhqk.supabase.co/rest/v1/products",
    {
      method: "GET",
      headers: {
        apikey:
          "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRocnlod2Nydmx6bG51dWN4aHFrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTYyMTIxNzUsImV4cCI6MjAzMTc4ODE3NX0.qe83qKHMa9-0Tc3HFWEqgvYa_LKMiI267dutJ7DxWs0",
      },
    }
  ).then((response) => response.json());

  return data.map((product) => {
    return {
      params: { slug: product.slug },
      props: { product: product },
    };
  });
}

const { product } = Astro.props;
---

<html lang="da">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <div class="omProduktet">
      <img src={product.image} alt="" />
      <h1>{product.title}</h1>
      <p>{product.price} DKK</p>
    </div>
    <button class="addItemButton">Tilføj til kurv</button>
    <section id="descriptionRow" class="descriptionBox">
      <h3>Beskrivelse</h3>
      <p id="descriptionContent" class="hide">
        {product.description}
      </p>
      <button id="showDescription" class="DescBtn">
        <span></span>
        <span></span>
      </button>
    </section>
    <section class="specificationRow">
      <h3>Specifikationer</h3>
      <div id="specificationContent" class="hide">
        <div class="specificationBox">
          <div>
            <h4 class="condition">Condition</h4>
            <p class="condition_desc">{product.condition}</p>
          </div>
          <div>
            <h4 class="created_at">Created At</h4>
            <p class="created_at_desc">{product.created_at}</p>
          </div>
          <div>
            <h4 class="country_origin">Country Origin</h4>
            <p class="country_origin_desc">{product.country_origin}</p>
          </div>
          <div>
            <h4 class="game_condition">Game Condition</h4>
            <p class="game_condition_desc">{product.game_condition}</p>
          </div>
        </div>
      </div>
      <button id="showSpecificationsBtn">
        <span></span>
        <span></span>
      </button>
    </section>
    <button class="notificationButton">Giv mig besked når produktet er på lager</button>
    <Carousel />
    <Footer />
  </body>
</html>

<style>
  .addItemButton{
    background-color: var(--secondary-accent);
    color: var(--primary-color);
    font-size: 1.2rem;
    width: 56vw;
    height: 5vh;
  }
  .notificationButton{
    background-color: var(--primary-color);
    color: var(--secondary-color);
    border: 1px solid var(--secondary-color);
    font-size: 1rem;
    width: 60vw;
    height: 10vh;
    padding: 0 6vw 0 6vw;
    margin: 16% 0 24% 0;
    transition: 700ms;
  }
  .notificationButton:hover{
    background-color: var(--secondary-accent);
    color: var(--primary-color);
    font-size: 1.2rem;
    transition: 700ms;
  }
  img {
    width: 100vw;
  }
  article {
    display: grid;
    grid-template-columns: 1fr;
    place-self: center;
    justify-content: center;
  }
  .descriptionBox {
    display: grid;
    grid-template-columns: 1fr 1fr;
    border-top: 1px solid var(--secondary-color);
    width: 100vw;
  }

  .specificationRow {
    display: grid;
    grid-template-columns: 1fr 1fr;
    border-bottom: 1px solid var(--secondary-color);
    border-top: 1px solid var(--secondary-color);
    width: 100vw;
  }
  .hide {
    opacity: 0;
    height: 0;
    margin: 0;
    overflow: hidden;
    transition-duration: 300ms;
    transition-timing-function: ease-in-out;
  }
  .show {
    opacity: 1;
    height: auto;
    transition-duration: 300ms;
    transition-timing-function: ease-in-out;
  }

  .specificationBox {
    display: grid;
    grid-template-columns: 24vw 24vw;
    column-gap: 12vw;
  }
  button {
    grid-area: 1/2/1/2;
    place-self: start end;
    color: var(--secondary-color);
    background: var(--primary-color);
    width: 2em;
    height: 2em;
    border: 0;
    font-size: 1.5em;
    position: relative;
  }

  button span {
    position: absolute;
    transition: 300ms;
    background: var(--secondary-color);
  }

  /* Her er det hvor jeg laver et "+"" tegn */
  button span:first-child {
    top: 20%;
    bottom: 25%;
    width: 1px;
    left: 50%;
  }

  button span:last-child {
    left: 25%;
    right: 25%;
    height: 1px;
    top: 45%;
  }

  /* når jeg klikker på "+" animeres den om til et "-" */
  .collapse span {
    transform: rotate(90deg);
  }

  .collapse span:last-child {
    left: 50%;
    right: 50%;
  }
</style>
<script>
  let specificationRow = document.querySelector(".specificationRow");
  let descriptionRow = document.querySelector("#descriptionRow");
  let showDescriptionBtn = document.querySelector("#showDescription");
  let showSpecificationsBtn = document.querySelector("#showSpecificationsBtn");
  let descriptionContent = document.querySelector("#descriptionContent");
  let specificationContent = document.querySelector("#specificationContent");

  descriptionRow.addEventListener("click", () => {
    descriptionContent.classList.toggle("hide");
    descriptionContent.classList.toggle("show");
    showDescriptionBtn.classList.toggle("collapse");
  });

  specificationRow.addEventListener("click", () => {
    specificationContent.classList.toggle("hide");
    specificationContent.classList.toggle("show");
    showSpecificationsBtn.classList.toggle("collapse");
  });
</script>
